"""
Django settings for proyecto_profesional project. # <-- Actualiza nombre del proyecto si quieres

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import environ # Importa environ (lo añadimos en requirements)
import os     # Importa os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR ahora apunta a la carpeta 'proyecto_profesional/'
BASE_DIR = Path(__file__).resolve().parent.parent

# --- NUEVO: Inicializar django-environ ---
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)
# Lee el archivo .env que estará en BASE_DIR (proyecto_profesional/.env)
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))
# --- FIN NUEVO ---


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# --- MODIFICADO: Leer SECRET_KEY desde .env ---
SECRET_KEY = env('SECRET_KEY', default='django-insecure-#$w%t_q6lxsd7^s2vm0dzs6feugr2pgumf*)^6s0qz8(gh9(au_REEMPLAZAR_CON_UNA_NUEVA') # Añade un default por si no está en .env

# SECURITY WARNING: don't run with debug turned on in production!
# --- MODIFICADO: Leer DEBUG desde .env ---
DEBUG = env('DEBUG')

# --- MODIFICADO: Leer ALLOWED_HOSTS desde .env (opcional, pero buena práctica) ---
# En .env sería algo como: ALLOWED_HOSTS=localhost,127.0.0.1,192.168.1.104
# ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=['localhost', '127.0.0.1'])
# Permitir acceso desde la IP local para pruebas en móvil
ALLOWED_HOSTS = ['localhost', '127.0.0.1', '192.168.1.104']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic', # <-- Añadido para WhiteNoise (servir estáticos)
    'django.contrib.staticfiles',
    'servicios',         # Nuestra aplicación principal
    'widget_tweaks',     # Para personalizar formularios
    'channels',          # Para soporte asíncrono y actualizaciones en tiempo real
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # <-- Añadido para WhiteNoise
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# --- LÍNEA MODIFICADA ---
ROOT_URLCONF = 'proyecto_config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # --- MODIFICADO: Añadir el directorio de plantillas base ---
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            # --- NUEVO: Añadir el tag de filtros personalizados globalmente ---
            'builtins': [
                'servicios.templatetags.custom_filters',
            ]
            # --- FIN NUEVO ---
        },
    },
]

# --- LÍNEA MODIFICADA ---
WSGI_APPLICATION = 'proyecto_config.wsgi.application'
# --- LÍNEA MODIFICADA ---
ASGI_APPLICATION = 'proyecto_config.asgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# --- MODIFICADO: Leer config de DB desde .env (ejemplo simple con SQLite) ---
# Puedes expandir esto para PostgreSQL, MySQL etc.
# En .env: DATABASE_URL=sqlite:///db_profesional.sqlite3
DATABASES = {
    'default': env.db('DATABASE_URL', default=f'sqlite:///{BASE_DIR / "db_profesional.sqlite3"}')
    # Original:
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db_mejorado.sqlite3', # Cambiamos el nombre a db_profesional
    # }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es-mx' # Cambiado a español de México

TIME_ZONE = 'America/Mexico_City'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
# --- MODIFICADO: Directorio para collectstatic ---
STATIC_ROOT = BASE_DIR / 'staticfiles' # Directorio donde se copiarán todos los estáticos para producción
# --- MODIFICADO: Directorios donde Django buscará estáticos además de en las apps ---
STATICFILES_DIRS = [BASE_DIR / "static"]

# --- NUEVO: Configuración de WhiteNoise ---
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# --- FIN NUEVO ---


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Channels
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer', # Para desarrollo está bien, para producción se usa Redis
    },
}

# --- NUEVO: Configuración Twilio desde .env ---
TWILIO_ACCOUNT_SID = env('TWILIO_ACCOUNT_SID', default=None)
TWILIO_AUTH_TOKEN = env('TWILIO_AUTH_TOKEN', default=None)
TWILIO_WHATSAPP_FROM = env('TWILIO_WHATSAPP_FROM', default=None) # ej: whatsapp:+14155238886
# --- FIN NUEVO ---